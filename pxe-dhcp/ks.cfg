 
eula --agreed

lang ru_RU.UTF-8 --addsupport=ru_RU.UTF-8,en_US.UTF-8

keyboard --xlayouts=us,ru --switch=grp:alt_shift_toggle

timezone Europe/Moscow
timesource --ntp-disable

graphical

%packages --multilib
@^kde-desktop-environment
%end

bootloader --location=mbr --timeout="3" --iscrypted --password=***
clearpart --all --initlabel

autopart

reboot

network --bootproto=dhcp

rootpw --iscrypted *****

user --name=***** --iscrypted

%pre --interpreter=/usr/bin/bash
curl -X POST -d 'status=start_install_os' *****4_pxe-eps/api/v1/mspxe/installation-events;
%end

%post --interpreter=/usr/bin/bash
curl -X POST -d 'status=done_install_os' ******/4_pxe-eps/api/v1/mspxe/installation-events;
curl -X POST -d 'status=start_post_default' *****4_pxe-eps/api/v1/mspxe/installation-events;

is_permit=yes
echo "PermitRootLogin $is_permit" >> /etc/ssh/sshd_config
systemctl restart sshd


url=****4_pxe-eps/api/v1/mspxe/get-scripts
profile_id=1
interfaces=$(ip -o link show | awk -F': ' '!/^[0-9]*: lo/ {print $2}')

macs=""
ips=""
netmasks=""

for interface in $interfaces; do
        macs="$macs $(ifconfig -a $interface | awk '/ether/ {print $2}')"
        netmasks="$netmasks $(ifconfig -a $interface | awk '/netmask/ {print $4}')"
        ips="$ips $(ifconfig -a $interface | awk '/inet / {print $2}')"
done

tmp_dir="/tmp/redadm_scripts"
mkdir -p "$tmp_dir"
scripts=$(python -c "
import sys, json
from urllib import request, parse

ips, macs, netmasks, profile, url, tmp_dir = sys.argv[1:]
data = {'ips': ips, 'macs': macs, 'netmasks': netmasks, 'profile': profile}
data = parse.urlencode(data).encode()
_request = request.Request(url, data=data)
response = request.urlopen(_request).read()
scripts = json.loads(response)
scripts_path_list = []
for script in scripts['scripts']:
    filename = tmp_dir.rstrip('/') + '/' + script['name'] + '.sh'
    with open(filename, 'w') as f:
        f.write(script['text'])
        scripts_path_list.append(filename)
print(' '.join(scripts_path_list))


" "$ips" "$macs" "$netmasks" "$profile_id" "$url" "$tmp_dir")

for script in $scripts; do
    chmod 755 "$script"
    /bin/bash "$script"
done

rm -Rf "$tmp_dir"


%end
